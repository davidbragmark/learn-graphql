scalar DateTime

enum PhotoCategory {
	SELFIE
	PORTRAIT
	ACTION
	LANDSCAPE
	GRAPHIC
}

input PostPhotoInput {
	name: String!
	category: PhotoCategory = PORTRAIT
	description: String
}

type AuthPayload {
	token: String!
	user: User!
}

type User {
	githubLogin: ID!
	name: String
	avatar: String
	postedPhotos: [Photo!]!
	inPhotos: [Photo!]!
}

type Photo {
	id: ID!
	url: String!
	name: String!
	description: String!
	category: PhotoCategory!
	postedBy: User!
	taggedUsers: [User!]!
	created: DateTime!
}

type Query {
	me: User
	totalPhotos: Int!
	allPhotos(after: DateTime): [Photo!]!
	Photo(id: ID!): Photo
	totalUsers: Int!
	allUsers: [User!]!
	User(login: ID!): User
}

type Mutation {
	githubAuth(code: String!): AuthPayload!
	postPhoto(input: PostPhotoInput!): Photo!
}
